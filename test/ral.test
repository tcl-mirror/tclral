#!/bin/sh
# \
exec tclsh "$0" "$@"

package require tcltest 2.2
eval tcltest::configure $argv
package require ral

namespace eval ::ral::test {
    namespace import ::tcltest::*
    namespace import ::ral::*

    # Tuple Tests

    # tuple assign subcommand
    test tuple-assign-1.0 {single attribute} -body {
	tuple assign {Tuple Name {Name Andrew}}
	expr {$Name eq "Andrew"}
    } -result 1

    test tuple-assign-2.0 {multiple attributes} -body {
	tuple assign {Tuple {Name {Age int}} {Name Andrew Age 20}}
	expr {$Name eq "Andrew" && $Age == 20}
    } -result 1

    # tuple create subcommand
    test tuple-create-1.0 {single attribute} -body {
	tuple create {{Name string}} {Name Andrew}
    } -result {Tuple {{Name string}} {Name Andrew}}

    test tuple-create-2.0 {multiple attributes} -body {
	set h {{Name string} {Age int}}
	tuple create $h {Name Andrew Age 20}
    } -result {Tuple {{Name string} {Age int}} {Name Andrew Age 20}}

    test tuple-create-3.0 {bad format} -body {
	set h {{Name string} {Age int}}
	tuple create $h {Name Andrew foo}
    } -result {list must have an even number of elements} -returnCodes error

    test tuple-create-4.0 {unknown attribute} -body {
	set h {{Name string} {Age int}}
	tuple create $h {Name Andrew foo 20}
    } -result {unknown attribute name, "foo"} -returnCodes error

    test tuple-create-5.0 {bad value type} -body {
	set h {{Name string} {Age int}}
	tuple create $h {Name Andrew Age foo}
    } -result {expected integer but got "foo"} -returnCodes error

    test tuple-create-6.0 {multiple assignment} -body {
	set h {{Name string} {Age int}}
	tuple create $h {Name Andrew Name foo}
    } -result {attribute, "Name", assigned a value multiple times}\
    -returnCodes error

    test tuple-create-7.0 {different ordering} -body {
	set h {{Name string} {Age int}}
	tuple create $h {Age 20 Name Andrew}
    } -result {Tuple {{Name string} {Age int}} {Name Andrew Age 20}}

    test tuple-create-8.0 {empty tuple} -body {
	tuple create {} {}
    } -result {Tuple {} {}}

    # tuple degree subcommand
    test tuple-degree-1.0 {single attribute} -body {
	tuple degree {Tuple Name {Name Andrew}}
    } -result 1

    test tuple-degree-2.0 {multiple attributes} -body {
	tuple degree {Tuple {{Name string} {Age int}} {Age 20 Name Andrew}}
    } -result 2

    test tuple-degree-3.0 {empty tuple} -body {
	tuple degree {Tuple {} {}}
    } -result 0

    # tuple eliminate subcommand
    test tuple-eliminate-1.0 {single attribute} -body {
	tuple eliminate {Tuple {{Name string}} {Name Andrew}} Name
    } -result {Tuple {} {}}

    test tuple-eliminate-2.0 {multiple attributes} -body {
	tuple eliminate {Tuple {{Name string} {Age int} {Size double}}\
	    {Name Andrew Age 20 Size 1.0}} Age Size
    } -result {Tuple {{Name string}} {Name Andrew}}

    test tuple-eliminate-3.0 {non-existent attribute} -body {
	tuple eliminate {Tuple {{Name string} {Age int} {Size double}}\
	    {Name Andrew Age 20 Size 1.0}} foo
    } -result {attribute, "foo", is not a member of the tuple,\
	"Tuple {{Name string} {Age int} {Size double}}\
	{Name Andrew Age 20 Size 1.0}"}\
    -returnCodes error

    # tuple equal subcommand
    test tuple-equal-1.0 {single attribute, match} -body {
	set t1 {Tuple {{Name string}} {Name Andrew}}
	set t2 {Tuple {{Name string}} {Name Andrew}}
	tuple equal $t1 $t2
    } -result 1

    test tuple-equal-2.0 {multiple attributes, match} -body {
	set t1 {Tuple {{Name string} {Age int}} {Age 20 Name Andrew}}
	set t2 {Tuple {{Name string} {Age int}} {Name Andrew Age 20}}
	tuple equal $t1 $t2
    } -result 1

    test tuple-equal-3.0 {single attribute, value mismatch} -body {
	set t1 {Tuple {{Name string}} {Name Andrew}}
	set t2 {Tuple {{Name string}} {Name George}}
	tuple equal $t1 $t2
    } -result 0

    test tuple-equal-4.0 {single attribute, attribute name mismatch} -body {
	set t1 {Tuple {{Name string}} {Name Andrew}}
	set t2 {Tuple {{name string}} {name George}}
	tuple equal $t1 $t2
    } -result 0

    test tuple-equal-5.0 {single attribute, type mismatch} -body {
	set t1 {Tuple {{Name string}} {Name 20}}
	set t2 {Tuple {{Name int}} {Name 40}}
	tuple equal $t1 $t2
    } -result 0

    test tuple-equal-6.0 {multiple attributes, value mismatch} -body {
	set t1 {Tuple {{Name string} {Age int}} {Age 20 Name Andrew}}
	set t2 {Tuple {{Name string} {Age int}} {Name Andrew Age 30}}
	tuple equal $t1 $t2
    } -result 0

    test tuple-equal-7.0 {multiple attributes, match, out of order} -body {
	set t1 {Tuple {{Name string} {Age int} {Size double}}\
	    {Name Andrew Age 20 Size 1.0}}
	set t2 {Tuple {{Size double} {Name string} {Age int}}\
	    {Name Andrew Age 20 Size 1.0}}
	tuple equal $t1 $t2
    } -result 1

    test tuple-equal-8.0 {multiple attributes, match, value variations} -body {
	set t1 {Tuple {{Name string} {Age int} {Size double}}\
	    {Name Andrew Age 0x20 Size 12.30}}
	set t2 {Tuple {{Size double} {Name string} {Age int}}\
	    {Name Andrew Age 32 Size 1.23e1}}
	tuple equal $t1 $t2
    } -result 1

    # tuple extend subcommand
    test tuple-extend-1.0 {single attribute} -body {
	set t {Tuple {{Name string}} {Name Andrew}}
	tuple extend $t {Age int 20}
    } -result {Tuple {{Name string} {Age int}} {Name Andrew Age 20}}

    test tuple-extend-2.0 {multiple attributes} -body {
	set t {Tuple {{Name string}} {Name Andrew}}
	tuple extend $t {Age int 20} {Size double 1.3}
    } -result {Tuple {{Name string} {Age int} {Size double}}\
	{Name Andrew Age 20 Size 1.3}}

    test tuple-extend-3.0 {duplicate name} -body {
	set t {Tuple {{Name string}} {Name Andrew}}
	tuple extend $t {Name int 20}
    } -result {duplicate attribute name, "Name"} -returnCodes 1

    test tuple-extend-4.0 {bad value} -body {
	set t {Tuple {{Name string}} {Name Andrew}}
	tuple extend $t {Age int foo}
    } -result {expected integer but got "foo"} -returnCodes 1

    test tuple-extend-5.0 {bad type} -body {
	set t {Tuple {{Name string}} {Name Andrew}}
	tuple extend $t {Age foo foo}
    } -result {unknown data type, "foo"} -returnCodes error

    # tuple extract subcommand
    test tuple-extract-1.0 {single attribute} -body {
	set t {Tuple {{Name string}} {Name Andrew}}
	tuple extract $t Name
    } -result {Andrew}

    test tuple-extract-2.0 {multiple attributes} -body {
	set t {Tuple {{Name string} {Age int} {Size double}}\
	    {Name Andrew Age 20 Size 1.3}}
	tuple extract $t Age Size
    } -result {20 1.3}

    test tuple-extract-3.0 {unknown attribute} -body {
	set t {Tuple {{Name string} {Age int} {Size double}}\
	    {Name Andrew Age 20 Size 1.3}}
	tuple extract $t foo
    } -result {unknown attribute name, "foo"} -returnCodes error

    # tuple get subcommand
    test tuple-get-1.0 {single attribute} -body {
	tuple get {Tuple {{Name string}} {Name Andrew}}
    } -result {Name Andrew}

    test tuple-get-2.0 {multiple attributes} -body {
	tuple get {Tuple {{Name string} {Age int} {Size double}}\
	    {Name Andrew Age 20 Size 1.3}}
    } -result {Name Andrew Age 20 Size 1.3}

    # tuple project subcommand
    test tuple-project-1.0 {single attribute} -body {
	set t {Tuple {{Name string}} {Name Andrew}}
	tuple project $t Name
    } -result {Tuple {{Name string}} {Name Andrew}}

    test tuple-project-2.0 {multiple attributes} -body {
	set t {Tuple {{Name string} {Age int} {Size double}}\
	    {Name Andrew Age 20 Size 1.3}}
	tuple project $t Name Age
    } -result {Tuple {{Name string} {Age int}} {Name Andrew Age 20}}

    test tuple-project-3.0 {project nothing} -body {
	set t {Tuple {{Name string} {Age int}} {Name Andrew Age 20}}
	tuple project $t
    } -result {Tuple {} {}}

    test tuple-project-4.0 {project everything} -body {
	set t {Tuple {{Name string} {Age int}} {Name Andrew Age 20}}
	tuple project $t Name Age
    } -result {Tuple {{Name string} {Age int}} {Name Andrew Age 20}}

    test tuple-project-5.0 {unknown attribute} -body {
	set t {Tuple {{Name string} {Age int}} {Name Andrew Age 20}}
	tuple project $t foo
    } -result {unknown attribute name, "foo"} -returnCodes 1

    # tuple rename subcommand
    test tuple-rename-1.0 {single attribute} -setup {
	set t [tuple create {{Name string}} {Name Andrew}]
    } -body {
	tuple rename $t Name Age
    } -result {Tuple {{Age string}} {Age Andrew}}

    test tuple-rename-2.0 {multiple attributes} -setup {
	set t [tuple create {{Name string} {Age int}}\
	    {Name Andrew Age 20}]
    } -body {
	tuple rename $t Name foo
    } -result {Tuple {{foo string} {Age int}} {foo Andrew Age 20}}

    test tuple-rename-3.0 {unknown attribute} -setup {
	set t [tuple create {{Name string} {Age int}}\
	    {Name Andrew Age 20}]
    } -body {
	tuple rename $t foo Name
    } -result {unknown attribute name, "foo"} -returnCodes error

    test tuple-rename-4.0 {unpaired attributes} -setup {
	set t [tuple create {{Name string} {Age int}}\
	    {Name Andrew Age 20}]
    } -body {
	tuple rename $t foo Name bar
    } -result {oldname / newname arguments must come in pairs}\
    -returnCodes error

    test tuple-rename-5.0 {multiple renamings} -setup {
	set t [tuple create {{Name string} {Age int}}\
	    {Name Andrew Age 20}]
    } -body {
	tuple rename $t Age bar Name foo
    } -result {Tuple {{foo string} {bar int}} {foo Andrew bar 20}}

    test tuple-rename-6.0 {same attribute, multiple renamings} -setup {
	set t [tuple create {{Name string} {Age int}}\
	    {Name Andrew Age 20}]
    } -body {
	tuple rename $t Name foo foo bar bar baz
    } -result {Tuple {{baz string} {Age int}} {baz Andrew Age 20}}

    test tuple-rename-7.0 {existing attribute} -setup {
	set t [tuple create {{Name string} {Age int}}\
	    {Name Andrew Age 20}]
    } -body {
	tuple rename $t Name Age
    } -result {duplicate attribute name, "Age"} -returnCodes error

    # tuple typeof subcommand
    test tuple-typeof-1.0 {single attribute} -setup {
	set t [tuple create {{Name string}} {Name Andrew}]
    } -body {
	tuple typeof $t
    } -result {Tuple {{Name string}}}

    test tuple-typeof-2.0 {multiple attributes} -setup {
	set t [tuple create {Name {Age int} {Size double}}\
	    {Name Andrew Age 20 Size 3.0}]
    } -body {
	tuple typeof $t
    } -result {Tuple {{Name string} {Age int} {Size double}}}

    # tuple unwrap subcommand
    test tuple-unwrap-1.0 {unwrap multiple attributes} -setup {
	set t [tuple create\
	    {{Name string}\
		{Address {Tuple {{Number int} {Street string} {City string}}}}}\
	    {Name Andrew Address {Number 599 Street Blackwood City Sunnyvale}}]
    } -body {
	tuple unwrap $t Address
    } -result {Tuple {{Name string} {Number int} {Street string} {City string}}\
	{Name Andrew Number 599 Street Blackwood City Sunnyvale}}

    test tuple-unwrap-2.0 {unwrap single attribute} -setup {
	set t [tuple create\
	    {{Name string} {Address {Tuple {{Number int}}}}}\
	    {Name Andrew Address {Number 599}}]
    } -body {
	tuple unwrap $t Address
    } -result {Tuple {{Name string} {Number int}} {Name Andrew Number 599}}

    test tuple-unwrap-3.0 {unknown unwrap attribute} -setup {
	set t [tuple create\
	    {{Name string}\
		{Address {Tuple {{Number int} {Street string} {City string}}}}}\
	    {Name Andrew Address {Number 599 Street Blackwood City Sunnyvale}}]
    } -body {
	tuple unwrap $t foo
    } -result {unknown attribute name, "foo"} -returnCodes error

    test tuple-unwrap-4.0 {non-tuple unwrap attribute} -setup {
	set t [tuple create\
	    {{Name string}\
		{Address {Tuple {{Number int} {Street string} {City string}}}}}\
	    {Name Andrew Address {Number 599 Street Blackwood City Sunnyvale}}]
    } -body {
	tuple unwrap $t Name
    } -result {attribute, "Name", is not of type Tuple} -returnCodes error

    # tuple update subcommand
    test tuple-update-1.0 {single attribute} -setup {
	set t [tuple create {{Name string} {Age int} {Size double}}\
	    {Name Andrew Age 20 Size 3.0}]
    } -body {
	tuple update t {Age 40}
    } -result {Tuple {{Name string} {Age int} {Size double}}\
	    {Name Andrew Age 40 Size 3.0}}

    test tuple-update-2.0 {multiple attributes} -setup {
	set t [tuple create {{Name string} {Age int} {Size double}}\
	    {Name Andrew Age 20 Size 3.0}]
    } -body {
	tuple update t {Age 40 Size 33.0}
    } -result {Tuple {{Name string} {Age int} {Size double}}\
	    {Name Andrew Age 40 Size 33.0}}

    test tuple-update-3.0 {unknown attribute} -setup {
	set t [tuple create {{Name string} {Age int} {Size double}}\
	    {Name Andrew Age 20 Size 3.0}]
    } -body {
	tuple update t {foo 40}
    } -result {unknown attribute name, "foo"} -returnCodes error

    test tuple-update-4.0 {bad type} -setup {
	set t [tuple create {{Name string} {Age int} {Size double}}\
	    {Name Andrew Age 20 Size 3.0}]
    } -body {
	tuple update t {Age foo}
    } -result {expected integer but got "foo"} -returnCodes error

    # tuple wrap subcommand
    test tuple-wrap-1.0 {wrap 1 attribute} -setup {
	set t [tuple create {{Name string} {Age int} {Size double}}\
	    {Age 20 Name Andrew Size 3.0}]
    } -body {
	tuple wrap $t Props {Age}
    } -result {Tuple {{Name string} {Size double} {Props {Tuple {{Age int}}}}}\
	{Name Andrew Size 3.0 Props {Age 20}}}

    test tuple-wrap-2.0 {wrap multiple attributes} -setup {
	set t [tuple create {{Name string} {Age int} {Size double}}\
	    {Age 20 Name Andrew Size 3.0}]
    } -body {
	tuple wrap $t Props {Age Size}
    } -result {Tuple {{Name string} {Props {Tuple {{Age int} {Size double}}}}}\
	{Name Andrew Props {Age 20 Size 3.0}}}

    test tuple-wrap-3.0 {wrap all attributes} -setup {
	set t [tuple create {{Name string} {Age int} {Size double}}\
	    {Age 20 Name Andrew Size 3.0}]
    } -body {
	tuple wrap $t Props {Name Age Size}
    } -result {Tuple {{Props {Tuple {{Name string} {Age int} {Size double}}}}}\
	{Props {Name Andrew Age 20 Size 3.0}}}

    test tuple-wrap-4.0 {non-existent attribute to wrap} -setup {
	set t [tuple create {{Name string} {Age int} {Size double}}\
	    {Age 20 Name Andrew Size 3.0}]
    } -body {
	tuple wrap $t Props {foo}
    } -result {unknown attribute name, "foo"} -returnCodes error

    test tuple-wrap-5.0 {wrap same attribute multiple times} -setup {
	set t [tuple create {{Name string} {Age int} {Size double}}\
	    {Age 20 Name Andrew Size 3.0}]
    } -body {
	tuple wrap $t Props {Name Age Name}
    } -result {duplicate attribute name, "Name"} -returnCodes error

    test tuple-wrap-6.0 {wrap attribute is a duplicate} -setup {
	set t [tuple create {{Name string} {Age int} {Size double}}\
	    {Age 20 Name Andrew Size 3.0}]
    } -body {
	tuple wrap $t Size {Name Age}
    } -result {duplicate attribute name, "Size"} -returnCodes error

    # Relvar Tests

    # relvar create subcommand
    test relvar-create-1.0 {single attribute, single body tuple} -body {
	relvar create N Name Name {Name Andrew}
    } -cleanup {
	relvar destroy N
    } -result {Relation {{{Name string}} Name} {{Name Andrew}}}

    test relvar-create-2.0 {multiple attributes, single body tuple} -body {
	relvar create N {Name {Age int}} Name {Name Andrew Age 20}
    } -cleanup {
	relvar destroy N
    } -result {Relation {{{Name string} {Age int}} Name} {{Name Andrew Age 20}}}

    test relvar-create-3.0 {single attribute, multiple body tuples} -body {
	relvar create N Name Name {Name Andrew} {Name George} {Name Fred}
    } -cleanup {
	relvar destroy N
    } -result {Relation {{{Name string}} Name}\
	{{Name Andrew} {Name George} {Name Fred}}}

    test relvar-create-4.0 {multiple attributes, multiple body tuples} -body {
	relvar create N {Name {Age int}} Name\
	    {Name Andrew Age 20}\
	    {Name George Age 20}\
	    {Name Fred Age 20}
    } -cleanup {
	relvar destroy N
    } -result {Relation {{{Name string} {Age int}} Name}\
	{{Name Andrew Age 20} {Name George Age 20} {Name Fred Age 20}}}

    test relvar-create-5.0 {arbitrary attribute ordering} -body {
	relvar create N {Name {Age int} City} Name\
	    {Name Andrew Age 20 City Sunnyvale}\
	    {Age 20 Name George City {San Jose}}\
	    {Name Fred City Saratoga Age 20}
    } -cleanup {
	relvar destroy N
    } -result {Relation {{{Name string} {Age int} {City string}} Name}\
	{{Name Andrew Age 20 City Sunnyvale}\
	 {Name George Age 20 City {San Jose}}\
	 {Name Fred Age 20 City Saratoga}}}

    test relvar-create-6.0 {empty relvar} -body {
	relvar create N Name Name
    } -cleanup {
	relvar destroy N
    } -result {Relation {{{Name string}} Name} {}}

    test relvar-create-7.0 {dee relvar} -body {
	relvar create DEE {} {} {}
    } -cleanup {
	relvar destroy DEE
    } -result {Relation {{} {}} {{}}}

    test relvar-create-8.0 {dum relvar} -body {
	relvar create DUM {} {}
    } -cleanup {
	relvar destroy DUM
    } -result {Relation {{} {}} {}}

    test relvar-create-9.0 {duplicate body tuple} -body {
	relvar create N {Name {Age int}} Name\
	    {Name Andrew Age 20}\
	    {Name George Age 20}\
	    {Name Andrew Age 20}
    } -result {tuple, "Name Andrew Age 20",\
	contains duplicate values for the identifier, "Name"}\
    -returnCodes error

    test relvar-create-10.0 {identifier with multiple attributes} -body {
	relvar create N {Name {Age int}} {{Name Age}}\
	    {Name Andrew Age 20}\
	    {Name George Age 20}\
	    {Name Fred Age 20}
    } -cleanup {
	relvar destroy N
    } -result {Relation {{{Name string} {Age int}} {{Name Age}}}\
	{{Name Andrew Age 20} {Name George Age 20} {Name Fred Age 20}}}

    test relvar-create-11.0 {multiple identifiers} -body {
	relvar create N {Name {Age int}} {Name Age}\
	    {Name Andrew Age 10}\
	    {Name George Age 20}\
	    {Name Fred Age 30}
    } -cleanup {
	relvar destroy N
    } -result {Relation {{{Name string} {Age int}} {Name Age}}\
	{{Name Andrew Age 10} {Name George Age 20} {Name Fred Age 30}}}

    test relvar-create-11.0 {multiple identifiers with duplicates} -body {
	relvar create N {Name {Age int}} {Name Age}\
	    {Name Andrew Age 10}\
	    {Name George Age 20}\
	    {Name Fred Age 20}
    } -result {tuple, "Name Fred Age 20",\
	contains duplicate values for the identifier, "Age"}\
    -returnCodes error

    test relvar-create-12.0 {overlapping identifiers} -body {
	relvar create N {Name {Age int}} {Name {Name Age}}\
	    {Name Andrew Age 10}\
	    {Name George Age 20}\
	    {Name Fred Age 30}
    } -result {identifier, "Name, Age", is not irreducible with\
	respect to least one other indentifier}\
    -returnCodes error

    cleanupTests
}

namespace delete ::ral::test
