#!/bin/sh
# \
exec tclsh "$0" "$@"
# This software is copyrighted 2014 by G. Andrew Mangogna.
# The following terms apply to all files associated with the software unless
# explicitly disclaimed in individual files.
# 
# The authors hereby grant permission to use, copy, modify, distribute,
# and license this software and its documentation for any purpose, provided
# that existing copyright notices are retained in all copies and that this
# notice is included verbatim in any distributions. No written agreement,
# license, or royalty fee is required for any of the authorized uses.
# Modifications to this software may be copyrighted by their authors and
# need not follow the licensing terms described here, provided that the
# new terms are clearly indicated on the first page of each file where
# they apply.
# 
# IN NO EVENT SHALL THE AUTHORS OR DISTRIBUTORS BE LIABLE TO ANY PARTY FOR
# DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING
# OUT OF THE USE OF THIS SOFTWARE, ITS DOCUMENTATION, OR ANY DERIVATIVES
# THEREOF, EVEN IF THE AUTHORS HAVE BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE AUTHORS AND DISTRIBUTORS SPECIFICALLY DISCLAIM ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT.  THIS SOFTWARE
# IS PROVIDED ON AN "AS IS" BASIS, AND THE AUTHORS AND DISTRIBUTORS HAVE
# NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS,
# OR MODIFICATIONS.
# 
# GOVERNMENT USE: If you are acquiring this software on behalf of the
# U.S. government, the Government shall have only "Restricted Rights"
# in the software and related documentation as defined in the Federal
# Acquisition Regulations (FARs) in Clause 52.227.19 (c) (2).  If you
# are acquiring the software on behalf of the Department of Defense,
# the software shall be classified as "Commercial Computer Software"
# and the Government shall have only "Restricted Rights" as defined in
# Clause 252.227-7013 (c) (1) of DFARs.  Notwithstanding the foregoing,
# the authors grant the U.S. Government and others acting in its behalf
# permission to use and distribute the software in accordance with the
# terms specified in this license.
# 
#  *++
# MODULE:
#   merge.test -- test cases for merging relvars in the
#	Tcl Relational Algebra Library
# 
# ABSTRACT:
# 
#  *--

package require tcltest
package require ral

eval tcltest::configure $argv

namespace eval ::ral::test {
    namespace import ::tcltest::*
    namespace import ::ral::*

    proc cmpRelvars {ns1 ns2} {
	set names1 [lsort [relvar names ${ns1}*]]
	set names2 [lsort [relvar names ${ns2}*]]
	if {[llength $names1] != [llength $names2]} {
	    puts "$ns1 names: $names1"
	    puts "$ns2 names: $names2"
	    return 0
	}
	foreach r1 $names1 r2 $names2 {
	    set val1 [relvar set $r1]
	    set val2 [relvar set $r2]
	    if {[relation is $val1 != $val2]} {
		puts [relformat $val1 $r1]
		puts [relformat $val2 $r2]
		return 0
	    }
	}
	return 1
    }

    proc cleanUpNamespace {ns} {
        set qualns [namespace current]::${ns}
	relvar constraint delete {*}[relvar constraint names ${qualns}::*]
	relvar unset {*}[relvar names ${qualns}::*]
	namespace delete $qualns
    }

    # example relvar data to use
    set testdir [file join [file dirname [info script]]]

    # Make the test files for text based serialization
    namespace eval testfiles [list source [file join $testdir merge1.tcl]]
    namespace eval testfiles [list source [file join $testdir pop1.tcl]]
    makeFile [serialize [namespace current]::testfiles::*] mergetest1.ral
    cleanUpNamespace testfiles

    namespace eval testfiles [list source [file join $testdir merge1.tcl]]
    namespace eval testfiles [list source [file join $testdir pop2.tcl]]
    makeFile [serialize [namespace current]::testfiles::*] mergetest2.ral
    cleanUpNamespace testfiles

    test merge-1.0 {
	merge same data twice
    } -setup {
        deserializeFromFile [file join [testsDirectory] mergetest1.ral]\
                mergetest
    } -cleanup {
        cleanUpNamespace mergetest
    } -body {
        set subfields [relation cardinality [relvar set mergetest::SubField]]
        mergeFromFile [file join [testsDirectory] mergetest1.ral]\
            mergetest
        expr {$subfields ==\
            [relation cardinality [relvar set mergetest::SubField]]}
    } -result {1}

    cleanupTests
}

namespace delete ::ral::test
 
if 0 {

    test XX-1.0 {
    } -setup {
    } -cleanup {
    } -body {
    } -result {}
}
