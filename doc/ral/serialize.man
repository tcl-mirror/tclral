[manpage_begin serialize n 0.8.4]
[comment {
# This software is copyrighted 2004, 2005, 2006, 2007 by G. Andrew Mangogna.
# The following terms apply to all files associated with the software unless
# explicitly disclaimed in individual files.
# 
# The authors hereby grant permission to use, copy, modify, distribute,
# and license this software and its documentation for any purpose, provided
# that existing copyright notices are retained in all copies and that this
# notice is included verbatim in any distributions. No written agreement,
# license, or royalty fee is required for any of the authorized uses.
# Modifications to this software may be copyrighted by their authors and
# need not follow the licensing terms described here, provided that the
# new terms are clearly indicated on the first page of each file where
# they apply.
# 
# IN NO EVENT SHALL THE AUTHORS OR DISTRIBUTORS BE LIABLE TO ANY PARTY FOR
# DIRECT, INDIRECT, SPECIAL, INCIDENTAL, OR CONSEQUENTIAL DAMAGES ARISING
# OUT OF THE USE OF THIS SOFTWARE, ITS DOCUMENTATION, OR ANY DERIVATIVES
# THEREOF, EVEN IF THE AUTHORS HAVE BEEN ADVISED OF THE POSSIBILITY OF
# SUCH DAMAGE.
# 
# THE AUTHORS AND DISTRIBUTORS SPECIFICALLY DISCLAIM ANY WARRANTIES,
# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE, AND NON-INFRINGEMENT.  THIS SOFTWARE
# IS PROVIDED ON AN "AS IS" BASIS, AND THE AUTHORS AND DISTRIBUTORS HAVE
# NO OBLIGATION TO PROVIDE MAINTENANCE, SUPPORT, UPDATES, ENHANCEMENTS,
# OR MODIFICATIONS.
# 
# GOVERNMENT USE: If you are acquiring this software on behalf of the
# U.S. government, the Government shall have only "Restricted Rights"
# in the software and related documentation as defined in the Federal
# Acquisition Regulations (FARs) in Clause 52.227.19 (c) (2).  If you
# are acquiring the software on behalf of the Department of Defense,
# the software shall be classified as "Commercial Computer Software"
# and the Government shall have only "Restricted Rights" as defined in
# Clause 252.227-7013 (c) (1) of DFARs.  Notwithstanding the foregoing,
# the authors grant the U.S. Government and others acting in its behalf
# permission to use and distribute the software in accordance with the
# terms specified in this license.
# 
#  *++
# MODULE:
#
# ABSTRACT:
# 
# $RCSfile: serialize.man,v $
# $Revision: 1.8 $
# $Date: 2007/06/09 22:22:31 $
#  *--
}]
[moddesc "Relation persistence"]
[titledesc "Persistent storage for relations"]
[copyright "2004, 2005, 2006, 2007 by G. Andrew Mangogna"]
[require ral [opt 0.8.4]]
[description]
This manpage describes a set of commands that are used for
saving the values of relvars on external storage.
All of the commands below take an optional [arg namespace] argument.
If present, then the command is applied to relvars from the given namespace.
Otherwise by default all relvars are considered.
Since TclRAL manages relvar names using [cmd namespace]-like syntax,
this may be used to manage distinct sets of relvars without risking
naming conflicts.

[section COMMANDS]
[list_begin definitions]
[call [cmd "::ral::serialize"] [opt namespace]]

The [cmd serialize] command returns a string that represents the values
and constraints for all of the relvars contained within [arg namespace].
The string returned by [cmd serialize] may be given to [cmd deserialize]
to restore the values of the relvars.

[call [cmd "::ral::serializeToFile"] [arg fileName] [opt namespace]]

The [cmd serializeToFile] command invokes [cmd serialize] and places the
resulting serialization string into the file given by [arg fileName].

[call [cmd "::ral::deserialize"] [arg serialization] [opt namespace]]

The [cmd deserialize] command restores the values and constraints on a
set of relvars.
The [arg serialization] argument must be a value returned from the
[cmd serialize] command.
If the [arg namespace] argument is given,
then the relvars and constraints are placed in the given namespace which
need not exist prior to invoking the command.

[call [cmd "::ral::deserializeFromFile"] [arg fileName] [opt namespace]]

The [cmd deserializeFromFile] command reads the file given by the
[arg fileName] argument and invokes [cmd deserialize] on its contents.

[call [cmd "::ral::storeToMk"] [arg fileName] [opt namespace]]

The [cmd storeToMk] command stores the state of a set of relvars into
a metaKit database.
Each relvar is stored in a separate metaKit [emph view].
Several additional views are created to hold system catalog information.
The additional views have names that start with [emph __ral].
If [arg fileName] exists already, it is renamed to be [arg fileName]~ before
a new file is created with the current state of the relvars.

[call [cmd "::ral::loadFromMk"] [arg fileName] [opt namespace]]

The [cmd loadFromMk] command restores the state of a set of relvars
from the information contained in a metaKit database.
That database must have been created using the [cmd storeToMk] command.

[call [cmd "::ral::dump"] [opt namespace]]

The [cmd dump] command returns a Tcl script that when evaluated will
restore the state of a set of relvars to be the same as when the [cmd dump]
command was executed.
The [cmd dump] command is another form of serialization for a set of relvars
and is often useful when creating Tcl packages that create an empty
schema of relvars.

[call [cmd "::ral::dumpToFile"] [arg fileName] [opt namespace]]
The [cmd dumpToFile] invokes the [cmd dump] command and writes the
resulting script to the file given by [arg fileName].

[list_end]

[section "SERIALIZATION FORMAT"]
The format used for serialization of a set of relvars consists of a Tcl list
with four elements.

[list_begin bullet]
[bullet]
Version information.
    [list_begin bullet]
    [bullet]
    Version
    [bullet]
    <library version>
    [list_end]
[bullet]
Relvar definition.
    [list_begin bullet]
    [bullet]
    Relvars
    [bullet]
    <list of relvar defs>
	[list_begin bullet]
	[bullet]
	<relvar name>
	[bullet]
	<relvar heading>
	[list_end]
    [list_end]
[bullet]
Constraint definition.
    [list_begin bullet]
    [bullet]
    Constraints
    [bullet]
    <list of constraints>
	[list_begin bullet]
	[bullet]
	association | partition | correlation
	[bullet]
	<constraint definition>
	    [list_begin bullet]
	    [bullet]
	    <association constraint definition>
	    [nl]
	    <association name> <relvar name> <attribute list> <mult/cond>
		<relvar name> <attribute list> <mult/cond>
	    [bullet]
	    <partition constraint definition>
	    [nl]
	    <partition name> <superset> <attribute list>
		<subset1> <attribute list> <subset2> <attribute list> ...
	    [bullet]
	    <correlation constraint definition>
	    [nl]
	    <?-complete?> <correlation name> <relvar name>
		<attribute list> <mult/cond> <relvar name> <attribute list>
		<attribute list> <mult/cond> <relvar name> <attribute list>
	    [list_end]
	[list_end]
    [list_end]
[bullet]
Relvar values.
    [list_begin bullet]
    [bullet]
    <relvar name>
    [bullet]
    <tuple list>
    [list_end]
[list_end]

[see_also relvar relation tuple]

[keywords tuple relation relvar]

[manpage_end]
