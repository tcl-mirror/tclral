========= ral 0.8.9 =========
2008/11/10 mangoa01

	* test/ral.test:
	  Added new test case to catch problem with tuple valued identifiers.

	* src/ral_attribute.c:
	* src/ral_attribute.h:
	* src/ral_relation.c:
	* src/ral_relationheading.c:
	* src/ral_relationobj.c:
	* src/ral_tupleheading.c:
	* src/ral_tupleobj.c:
          Corrected a problem with the way that hash keys for tuple and
          relation valued identifiers were formed. Previously just used the
          string representation.  This is wrong. Now we use a recursive
          concatenation of the attributes values of the tuple and of the tuple
          values of a relation. This is in keeping with the new way of
          generated hash keys for multi-attribute identifiers.

2008/11/03 mangoa01

	* doc/ral/relformat.man:
	* doc/ral/relvar.man:
	* doc/ral/serialize.man:
	* doc/ral/tuple.man:
	  Changed version number in anticipation of the 0.8.9 release.

	* src/ral_relvar.c:
          Corrected a problem when the interpreter was destroyed in the middle
          of a transaction.

	* src/ral_relation.c:
	* test/ral.test:
          Corrected a problem with the way that hash keys were generated for
          multi-attribute identifiers. This showed up as a problem with join.
          The key was generated by simply concatenating the string
          representation of the identifying attributes. This is not unique as
          separate attribute values could concatenate to same string.

	* doc/ral/relation.man:
	  Include a discussion on some of the limitations of set operations on
	  relation values.

2008/11/02 mangoa01

	* src/ral_utils.c:
	* src/ral_utils.h:
          Added "serious internal error" error message. Also initialize the
          "errorCode" field to "OK". This will catch other places where it is
          not properly set and prevent indexing into never-never land.

	* configure:
	* configure.in:
	* src/ral.tcl:
	* src/ralutil.tcl:
	  Preparing for the 0.8.9 release.

2008/06/09 mangoa01

	* src/ral_relvarobj.c:
	* test/ral.test:
          Corrected a problem where invoking "relvar transaction end" without a
          corresponding "relvar transaction begin" caused a panic and dumped
          core.

2008/04/26 mangoa01

	* src/ral_relvarobj.c:
	  Bug #1949888
          Fix for old AIX compiler that can't handle automatic variable
          declarations that are not at the beginning of a block.

2008/04/22 mangoa01

	* src/ral_attribute.c:
	  Removed the use of "stdbool.h" as this is a C99 feature that causes
	  old compilers great consternation. Reverted to plain old ints.

========= ral 0.8.8 =========
2008/04/15 mangoa01

	* src/ral_attribute.c:
	* src/ral_relationobj.c:
	* src/ral_relvar.c:
	* src/ral_relvarcmd.c:
	* src/ral_relvarobj.c:
	* src/ral_tupleobj.c:
	* test/ral.test:
	  Cleaned up several aspects dealing with the lifetimes of the
	  internal representation. There were places in the code where
	  the string representation was being invalidated when it should
	  not have been. In particular, the string rep of "literals" was
	  occasionally invalidated and this causes Tcl to panic when the
	  literal table is cleaned up when an interpreter is destroyed.

2008/04/14 mangoa01

	* src/ral_relation.c:
	* test/ral.test:
	  Corrected a problem with "relation divide". In divide the
	  heading of the mediator relation must be the union of the
	  headings of the dividend and divisor. The code as written
	  failed to insure that the mediator heading was not a super
	  set of the union of the dividend and divisor headings.

2008/04/13 mangoa01

	* test/serialize.test:
	  Documentation change.

	* src/ral_relvarobj.c:
	  Remove an unused variable warning when assertions are compiled out.

	* src/ral.c:
	* src/ral_attribute.c:
	* src/ral_relvarobj.c:
	  Removed all the dependencies on "tclInt.h" for the Tcl 8.4 builds.

	* CHANGES:
	* README:
	  Updates preparing for 0.8.8 release.

2008/04/12 mangoa01

	* configure:
	* configure.in:
	* src/ral.tcl:
	* src/ral_relvarcmd.c:
	* src/ral_relvarcmd.h:
	* src/ral_relvarobj.c:
	* src/ral_relvarobj.h:
	* src/ralutil.tcl:
	* test/ral.test:
	  Bug #1939872
	  Corrected an error where copy on write rules were not properly
	  enforced when the relation values stored in a relvar are
	  modified. Added a check if the underlying relation value is
	  being shared and if so, then a copy is made to prevent stomping
	  on the reference.

	* src/ral_attribute.c:
	  Improved comments in code.

	* doc/ral/relation.man:
	* doc/ral/relformat.man:
	* doc/ral/relvar.man:
	* doc/ral/serialize.man:
	* doc/ral/tuple.man:
	  Removed deprecated doctools commands.
	  Added more explanation of data types in the "Tuple" man page.
	  Make ready for 0.8.8. release.

	* src/ral_relvar.c:
	* src/ral_relvar.h:
	  Source code clean up.

2008/04/11 mangoa01

	* src/ral.c:
	* src/ral_attribute.c:
	* src/ral_attribute.h:
	* src/ral_relationcmd.c:
	* src/ral_relvarobj.c:
	* test/ral.test:
	  Bug #1923541.
	  This set of changes removes the dependency on the internal
	  representation of Tcl objects. Now, there is a "shadow" type
	  system that is internally maintained. The interface to Tcl
	  uses the "Tcl_GetXXXFromObj()" functions that are part of
	  the recognized public interface. The "Relation" and "Tuple"
	  object types are no longer registered in keep with the general
	  consensus that "Tcl_RegisterObjType()" is a design misfeature.
	  Now, attributes may not have an arbitrary Tcl type associated
	  with them, but instead there are a set of Tcl types, mainly the
	  numeric ones, that are recognized and for which the necessary
	  type operations are supported.

2008/04/04 mangoa01

	* src/ral_relvarobj.c:
	* src/ral_utils.c:
	* src/ral_utils.h:
	  Changed confusing error message when a relvar is "unset"
	  during a transaction.

2008/04/02 mangoa01

	* src/ralutil.tcl:
	  Fix to bug #1931572.
	  Added "package require ral" to make sure "ralutil.tcl" is explicit
	  about all of its package dependencies.

2008/02/15 mangoa01

	* test/ral.test:
	  Added tests for fix to bug # 1893238.

	* src/ral_attribute.c:
	  Fixed: 1893238
	  The empty string represents something else for relation valued
	  attributes and so the test for the empty string was moved to
	  apply only to Tcl types.

2008/02/09 mangoa01

	* src/ral.c:
	* src/ral_relation.c:
	* src/ral_relationcmd.c:
	* src/ral_relationheading.c:
	* src/ral_tuplecmd.c:
	* src/ral_tupleheading.c:
	* src/ral_vector.c:
	  Added patch from Andreas Kupries to resolve problems in the code base
	  for native HPUX and AIX compilers. A number of C99 and GCC specific
	  constructs had crept into the code base.

========= ral 0.8.7 =========
Version 0.8.7 is a bug fix release.

1. Correct a problem when a newer version of the serialization code contained
in "ral.tcl" was committed. This code was being developed for the 0.9 release
and was accidentally inserted in the the release. This broke the ability to
serialize and deserialize relvars and contained a different serialization
format that was inconsistent with the other 0.8 releases.

========= ral 0.8.6 =========
Version 0.8.6 is a code clean up release. There were a number of GCC specific
constructs that were in the source that caused errors for other compilers
(e.g. the native Sun compiler). There was no change in functionality, only
the elimination of some anonymous unions in a couple data structures.

========= ral 0.8.5 =========
Version 0.8.5 is a bug fix release.

1. Corrected a problem with the package configuration command, "ral::pkgconfig".
This command is formed by a call to Tcl_RegisterConfig(). In previous verions,
an incorrect encoding string was passed to the call. Late in the 8.5 release,
the semantics of how this was handled was changed and the error, which in the
past was effective masked, now shows up.

2. Fixed an anonymous union that causes compilation problems on compilers other
than GCC.

========= ral 0.8.3 =========
Version 0.8.3 is primarily a bug fix release, however, several new commands
were added.

1. Added "relation compose" command.
2. Moved "crosstab" proc in "ralutil" into the proper namespace
3.  Added "tuple relation" command.
4. Corrected a problem with "relation group" when there are multiple
identifiers and the grouping results in fewer identifiers in the grouped
relation than in the original one.
5. Corrected a problem with "relation rename". It was using a "medium" deep
copy of the relation value in an attempt to save the deep copy. Unfortunately,
this implied that the tuples pointed to a different tuple header than
the relation that they were in. Then went "rename" modifies the header, the
relation internals ended up corrupt -- the tuple in the relation were
pointing to different header than the one in the relation where they resided.
6. Corrected a problem when create relvars where the parent namespace does not
exist. The clean up failed because the name of the relvar was deleted before it
could be removed from the internal structures.

========= ral 0.8.2 =========
Version 0.8.2 is primarily a bug fix release, however, several
new commands have been added and there are three commands were the interface
has changed slightly.

1. There is now a "relvar transaction" command that is complementary to
"relvar eval". This command allows controlling the contraint evaluation
across several commands were that is necessary.

2. The return value of "relvar insert", "relvar update" and "relvar updateone"
has changed. Now the commands return a relation value that contains the
inserted or updated tuples only. Previously the commands returned the
entire value of the relvar. This change makes it possible for the caller
to be able to see the changes that might be made by a relvar trace on the
insert or update.


========= ral 0.8.1 =========

Version 0.8.1 is an incremental release that is backward compatible at the
script level. There have been a number of code base improvements.  Several new
commands were added that experience indicated were useful. Several commands
have new optional arguments. The biggest new feature is relvar tracing. It is
now possible to define a trace on a relvar and intercede in some of the relvar
operations.  A new package called "ralutil" is included that contains some
useful procs. The "ralutil" package is, in places, quite experimental as
subject to interface changes. There is no documentation yet for the "ralutil"
package, but that will come later as the interfaces stabilize.  However, I
wanted a place to try out new things without cluttering the main "ral" package.

Overview of the script visible changes from Version 0.8 to Version 0.8.1

1. Added "relvar trace" command. This allows setting traces on relvar
    operations.

2. Added the commands "relvar union", "relvar intersect", "relvar
    minus". These are shorthands for performing the indicated operation
    and assigning the result back into the relvar.

3. Added the "relation create" command so that relation values can be
    created without reference to the string representation of the relation.
    Compare with "tuple create"

4. Added the command "relation body" to return the body of a relation. The
    body is a list of tuple values, each of which is a dictionary of
    attribute name / attribute value pairs.

5. Added "relation reidentify" to change the identifiers of a relation
    value.  Occasionally it is desirable to change identifiers when by
    context other information is known about a relation value.

6. Modified "relation array" and "relation dict" to accept optional
    arguments for the key attribute name and value attribute name. This
    makes it more convenient so that projecting out a binary relation
    is not strictly required now.

7. Create a "ralutil" package as part of the release to hold utility procs
    and other experimental script code.

========= ral 0.8 =========
Version 0.8 is a complete refactoring and rewrite of the extension.
The source has been split among many files and there was a concerted
attempt to have an internal "C" API separated from the Tcl portions.
The biggest new feature is support for referential integrity constraints.
Support for virtual relvars (i.e. views) has been removed, but may come
back later when whole area is better understood.

========= ral 0.7 =========
Organization of the source code did not change in this version. It is still a
single (albeit rather large) "C" file. The "relformat" utility is also still
implemented as script. However, the build procedure is now TEA compliant.

========= ral 0.6 =========
TCLRAL is contained in a single "C" source file. My apologies that the build
mechanisms are so primative. I'll improve then in future releases. As it stands
now, you need only compile the single source file to produce a shared
library.  A utility procedure, "relformat", is included as Tcl script. The
"pkgIndex.tcl" file handles the load and source necessary to get everything
loaded.
